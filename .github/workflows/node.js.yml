name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/my_ec2_key
        chmod 600 ~/.ssh/my_ec2_key
        # Ensure the known_hosts file is set up correctly
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
      env:
        EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Deploy to Server
      run: |
        ssh -i ~/.ssh/my_ec2_key -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          # Ensure PM2 is installed
          if ! command -v pm2 &> /dev/null
          then
            echo "PM2 is not installed. Installing..."
            npm install pm2@latest -g
          fi
          
          # Log in to DockerHub on the server (if not already done)
          echo "Logging in to DockerHub..."
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          
          # Pull the latest Docker image from Docker Hub
          echo "Pulling the latest Docker image..."
          docker pull pawan042/openride:latest
          
          # Shut down old containers
          echo "Shutting down old containers..."
          docker-compose down
          
          # Ensure docker-compose.yml is present on the server
          echo "Copying docker-compose.yml to the server..."
          scp -i ~/.ssh/my_ec2_key docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/path/to/destination/
          
          # Start or reload the container with PM2
          echo "Checking if PM2 process exists..."
          if pm2 show ride > /dev/null 2>&1; then
            # If it exists, reload the container
            echo "Reloading PM2 container..."
            pm2 reload ride
          else
            # If it doesn't exist, start a new container with PM2
            echo "Starting new container with PM2..."
            pm2 start /path/to/destination/docker-compose.yml --name ride
          fi
          
          # Check if the container is running and display details
          echo "Checking if the container is running..."
          docker ps --filter "name=ride"
          
          # Display container details
          echo "Container details:"
          docker inspect ride
        EOF

