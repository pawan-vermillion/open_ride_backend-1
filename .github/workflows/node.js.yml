name: Docker CI/CD Pipeline 

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/my_ec2_key
        chmod 600 ~/.ssh/my_ec2_key
        # Ensure the known_hosts file is set up correctly
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
      env:
        EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Deploy to Server
      run: |
        # SSH into the server to pull and run the Docker image
        ssh -i ~/.ssh/my_ec2_key -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          # Pull the latest Docker image from Docker Hub
          echo "Pulling the latest Docker image..."
          docker pull pawan042/openride:latest

          # Check if there are existing containers and remove them
          echo "Stopping and removing old containers..."
          docker stop ride || true
          docker rm ride || true

          # Run the new container
          echo "Running the new container..."
          docker run -d --name ride -p 3002:3002 pawan042/openride:latest

          # Check if the container is running
          echo "Checking if the container is running..."
          docker ps --filter "name=ride"
        EOF
